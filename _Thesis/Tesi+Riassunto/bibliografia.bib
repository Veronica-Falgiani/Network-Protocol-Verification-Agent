@book{scarfone2008technical,
author = {Scarfone, Karen. and National Institute of Standards and Technology (U.S.)},
address = {Gaithersburg, MD},
booktitle = {Technical guide to information security testing and assessment : recommendations of the National Institute of Standards and Technology},
keywords = {Information resources -- Security measures -- Government policy -- United States ; Computer security -- Government policy -- United States},
language = {eng},
publisher = {U.S. Dept. of Commerce, National Institute of Standards and Technology},
series = {NIST special publication ; 800-115. Computer security},
title = {Technical guide to information security testing and assessment : recommendations of the National Institute of Standards and Technology },
year = {2008},
pages = {2-1--2-6}
}


@book{computer2021tanenbaum,
author = {Andrew S. Tanenbaum, Nick Feamster, David J. Wetherall},
publisher = {Pearson},
title = {Computer Networks},
year = {2021},
pages={49-53}
}

@misc{rfcICMP,
    number =    792,
    howpublished =  {RFC 792},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC0792},
    url =       {https://www.rfc-editor.org/info/rfc792},
    author =    {J. Postel},
    title =     {{Internet Control Message Protocol}},
    pagetotal = 21,
    year =      1981,
    month =     sep,
    abstract =  {},
}

@misc{rfcTCP,
    number =    675,
    howpublished =  {RFC 675},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC0675},
    url =       {https://www.rfc-editor.org/info/rfc675},
    author =    {Vinton Cerf, Yogen Dalal, Carl Sunshine},
    title =     {{Specification of Internet Transmission Control Program}},
    pagetotal = 70,
    year =      1974,
    month =     dec,
    abstract =  {The first detailed specification of TCP; see RFC 793.},
}

@misc{rfcUDP,
    number =    768,
    howpublished =  {RFC 768},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC0768},
    url =       {https://www.rfc-editor.org/info/rfc768},
    author =    {J. Postel},
    title =     {{User Datagram Protocol}},
    pagetotal = 3,
    year =      1980,
    month =     aug,
    abstract =  {},
}


@misc{rfcFTP,
    number =    959,
    howpublished =  {RFC 959},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC0959},
    url =       {https://www.rfc-editor.org/info/rfc959},
    author =    {J. Postel, J. Reynolds},
    title =     {{File Transfer Protocol}},
    pagetotal = 69,
    year =      1985,
    month =     oct,
}

@misc{rfcTELNET,
    series =    {Request for Comments},
    number =    854,
    howpublished =  {RFC 854},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC0854},
    url =       {https://www.rfc-editor.org/info/rfc854},
    author =    {J. Postel, J. Reynolds},
    title =     {{Telnet Protocol Specification}},
    pagetotal = 15,
    year =      1983,
    month =     may,
    abstract =  {This is the specification of the Telnet protocol used for remote terminal access in the ARPA Internet. The purpose of the TELNET Protocol is to provide a fairly general, bi-directional, eight-bit byte oriented communications facility. Its primary goal is to allow a standard method of interfacing terminal devices and terminal-oriented processes to each other. It is envisioned that the protocol may also be used for terminal-terminal communication ("linking") and process-process communication (distributed computation). This RFC specifies a standard for the ARPA Internet community. Hosts on the ARPA Internet are expected to adopt and implement this standard. Obsoletes NIC 18639.},
}

@misc{rfcSMTP,
    series =    {Request for Comments},
    number =    5321,
    howpublished =  {RFC 5321},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC5321},
    url =       {https://www.rfc-editor.org/info/rfc5321},
    author =    {Dr. John C. Klensin},
    title =     {{Simple Mail Transfer Protocol}},
    pagetotal = 95,
    year =      2008,
    month =     oct,
    abstract =  {This document is a specification of the basic protocol for Internet electronic mail transport. It consolidates, updates, and clarifies several previous documents, making all or parts of most of them obsolete. It covers the SMTP extension mechanisms and best practices for the contemporary Internet, but does not provide details about particular extensions. Although SMTP was designed as a mail transport and delivery protocol, this specification also contains information that is important to its use as a "mail submission" protocol for "split-UA" (User Agent) mail reading systems and mobile environments. {[}STANDARDS-TRACK{]}},
}

@misc{rfcDNS,
    series =    {Request for Comments},
    number =    1035,
    howpublished =  {RFC 1035},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC1035},
    url =       {https://www.rfc-editor.org/info/rfc1035},
    author =    {P. Mockapetris},
    title =     {{Domain names - implementation and specification}},
    pagetotal = 55,
    year =      1987,
    month =     nov,
    abstract =  {This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System. It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.},
}

@misc{cloudflareDNS,
  title     = {Che cos'Ã¨ il DNS? | Come funziona il DNS},
  author    = {Cloudflare},
  year      = 2025,
  url       = {https://www.cloudflare.com/it-it/learning/dns/what-is-dns/}
}

@misc{rfcHTTP,
    number =    9112,
    howpublished =  {RFC 9112},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9112},
    url =       {https://www.rfc-editor.org/info/rfc9112},
    author =    {Roy T. Fielding and Mark Nottingham and Julian Reschke},
    title =     {{HTTP/1.1}},
    pagetotal = 46,
    year =      2022,
    month =     jun,
    abstract =  {The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns. This document obsoletes portions of RFC 7230.},
}

@misc{rfcHTTPSEMANTIC,
    number =    9110,
    howpublished =  {RFC 9110},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9110},
    url =       {https://www.rfc-editor.org/info/rfc9110},
    author =    {Roy T. Fielding and Mark Nottingham and Julian Reschke},
    title =     {{HTTP Semantics}},
    pagetotal = 194,
    year =      2022,
    month =     jun,
    abstract =  {The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes. This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.},
}

@misc{rfcPOP,
    series =    {Request for Comments},
    number =    1939,
    howpublished =  {RFC 1939},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC1939},
    url =       {https://www.rfc-editor.org/info/rfc1939},
    author =    {Dr. Marshall T. Rose and John G. Myers},
    title =     {{Post Office Protocol - Version 3}},
    pagetotal = 23,
    year =      1996,
    month =     may,
    abstract =  {The Post Office Protocol - Version 3 (POP3) is intended to permit a workstation to dynamically access a maildrop on a server host in a useful fashion. {[}STANDARDS-TRACK{]}},
}

@misc{rfcIMAP,
    number =    3501,
    howpublished =  {RFC 3501},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3501},
    url =       {https://www.rfc-editor.org/info/rfc3501},
    author =    {Mark Crispin},
    title =     {{INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1}},
    pagetotal = 108,
    year =      2003,
    month =     mar,
    abstract =  {The Internet Message Access Protocol, Version 4rev1 (IMAP4rev1) allows a client to access and manipulate electronic mail messages on a server. IMAP4rev1 permits manipulation of mailboxes (remote message folders) in a way that is functionally equivalent to local folders. IMAP4rev1 also provides the capability for an offline client to resynchronize with the server. IMAP4rev1 includes operations for creating, deleting, and renaming mailboxes, checking for new messages, permanently removing messages, setting and clearing flags, RFC 2822 and RFC 2045 parsing, searching, and selective fetching of message attributes, texts, and portions thereof. Messages in IMAP4rev1 are accessed by the use of numbers. These numbers are either message sequence numbers or unique identifiers. IMAP4rev1 supports a single server. A mechanism for accessing configuration information to support multiple IMAP4rev1 servers is discussed in RFC 2244. IMAP4rev1 does not specify a means of posting mail; this function is handled by a mail transfer protocol such as RFC 2821. {[}STANDARDS-TRACK{]}},
}

@misc{microsoftSMB,
    publisher = {Microsoft Corporation},
    url =       {https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-smb2/5606ad47-5ee0-437a-817e-70c366052962},
    author =    {Microsoft Corporation},
    title =     {{Server Message Block (SMB) Protocol Versions 2 and 3}},
    pagetotal = 497,
    year =      2025,
    month =     jul,
}

@misc{rfcSSH,
    number =    4251,
    howpublished =  {RFC 4251},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC4251},
    url =       {https://www.rfc-editor.org/info/rfc4251},
    author =    {Chris M. Lonvick and Tatu Ylonen},
    title =     {{The Secure Shell (SSH) Protocol Architecture}},
    pagetotal = 30,
    year =      2006,
    month =     jan,
    abstract =  {The Secure Shell (SSH) Protocol is a protocol for secure remote login and other secure network services over an insecure network. This document describes the architecture of the SSH protocol, as well as the notation and terminology used in SSH protocol documents. It also discusses the SSH algorithm naming system that allows local extensions. The SSH protocol consists of three major components: The Transport Layer Protocol provides server authentication, confidentiality, and integrity with perfect forward secrecy. The User Authentication Protocol authenticates the client to the server. The Connection Protocol multiplexes the encrypted tunnel into several logical channels. Details of these protocols are described in separate documents. {[}STANDARDS-TRACK{]}},
}

@misc{oasisMQTT,
    publisher = {Oasis},
    url =       {https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html},
    author =    {A. Banks E. Briggs K. Borgendale and R. Gupta},
    title =     {MQTT Version 5.0},
    year =      2019,
    month =     mar,
}

@misc{rfcNFS,
    number =    7530,
    howpublished =  {RFC 7530},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC7530},
    url =       {https://www.rfc-editor.org/info/rfc7530},
    author =    {Thomas Haynes and David Noveck},
    title =     {{Network File System (NFS) Version 4 Protocol}},
    pagetotal = 323,
    year =      2015,
    month =     mar,
    abstract =  {The Network File System (NFS) version 4 protocol is a distributed file system protocol that builds on the heritage of NFS protocol version 2 (RFC 1094) and version 3 (RFC 1813). Unlike earlier versions, the NFS version 4 protocol supports traditional file access while integrating support for file locking and the MOUNT protocol. In addition, support for strong security (and its negotiation), COMPOUND operations, client caching, and internationalization has been added. Of course, attention has been applied to making NFS version 4 operate well in an Internet environment. This document, together with the companion External Data Representation (XDR) description document, RFC 7531, obsoletes RFC 3530 as the definition of the NFS version 4 protocol.},
}

@misc{eventhelixNFS,
    publisher = {EventHelix},
    url =       {https://www.eventhelix.com/networking/NFS_Protocol_Sequence_Diagram.pdf},
    author =    {EventHelix},
    title =     {Network File System Protocol (NFS Protocol Sequence Diagram)},
    year =      2011,
    month =     may,
}

@misc{rfcTLS,
    number =    8446,
    howpublished =  {RFC 8446},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC8446},
    url =       {https://www.rfc-editor.org/info/rfc8446},
    author =    {Eric Rescorla},
    title =     {{The Transport Layer Security (TLS) Protocol Version 1.3}},
    pagetotal = 160,
    year =      2018,
    month =     aug,
    abstract =  {This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery. This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.},
}

@misc{rfcSSLDEP,
    number =    7568,
    howpublished =  {RFC 7568},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC7568},
    url =       {https://www.rfc-editor.org/info/rfc7568},
    author =    {Richard Barnes and Martin Thomson and Alfredo Pironti and Adam Langley},
    title =     {{Deprecating Secure Sockets Layer Version 3.0}},
    pagetotal = 7,
    year =      2015,
    month =     jun,
    abstract =  {The Secure Sockets Layer version 3.0 (SSLv3), as specified in RFC 6101, is not sufficiently secure. This document requires that SSLv3 not be used. The replacement versions, in particular, Transport Layer Security (TLS) 1.2 (RFC 5246), are considerably more secure and capable protocols. This document updates the backward compatibility section of RFC 5246 and its predecessors to prohibit fallback to SSLv3.},
}


@article{ChadwickDavidW2001ETia,
abstract = {With the growth of many different public key infrastructures on the Internet, relying parties have the difficult task of deciding whether the sender of digitally signed message is really who the public key certificate says they are. We have built an expert system that calculates the amount of trust, or trust quotient, that one can place in the name to public key binding in a certificate. The structure of the expert system is based on the CPS framework of Chokhani and Ford (RFC 2527), whilst the relative importance of the various factors that comprise the trust quotient, were determined by interviewing PKI experts from around the globe. This paper discusses the knowledge analysis strategy employed to collect this expert information and how we used it to develop the KBS. The analysis of the results of the interviews are also presented, and they can be summarised succinctly as âthere are some factors concerning trust in a PKI which nearly all experts agree upon, and there are other factors in which there is very little agreement at allâ. The importance of identifying contextual factors when building a knowledge base is very important. In many cases, a disagreement between experts, as shown by a bimodal split in importance, was traced to differences in context and we show how this can be a source of new knowledge.},
author = {Chadwick, David W and Basden, Andrew},
address = {Amsterdam},
issn = {0167-4048},
journal = {Computers \& security},
copyright = {2001 Elsevier Science Ltd},
keywords = {Certification ;  Trust},
language = {eng},
number = {7},
pages = {592-611},
publisher = {Elsevier Ltd},
title = {Evaluating Trust in a Public Key Certification Authority},
volume = {20},
year = {2001},
}

@misc{rfcFTPSSL,
    number =    4217,
    howpublished =  {RFC 4217},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC4217},
    url =       {https://www.rfc-editor.org/info/rfc4217},
    author =    {Paul Ford-Hutchinson},
    title =     {{Securing FTP with TLS}},
    pagetotal = 29,
    year =      2005,
    month =     oct,
    abstract =  {This document describes a mechanism that can be used by FTP clients and servers to implement security and authentication using the TLS protocol defined by RFC 2246, "The TLS Protocol Version 1.0.", and the extensions to the FTP protocol defined by RFC 2228, "FTP Security Extensions". It describes the subset of the extensions that are required and the parameters to be used, discusses some of the policy issues that clients and servers will need to take, considers some of the implications of those policies, and discusses some expected behaviours of implementations to allow interoperation. This document is intended to provide TLS support for FTP in a similar way to that provided for SMTP in RFC 2487, "SMTP Service Extension for Secure SMTP over Transport Layer Security", and HTTP in RFC 2817, "Upgrading to TLS Within HTTP/1.1.". This specification is in accordance with RFC 959, "File Transfer Protocol". It relies on RFC 2246, "The TLS Protocol Version 1.0.", and RFC 2228, "FTP Security Extensions". {[}STANDARDS-TRACK{]}},
}

@misc{rfcSMTPSSL,
    number =    3207,
    howpublished =  {RFC 3207},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3207},
    url =       {https://www.rfc-editor.org/info/rfc3207},
    author =    {Paul E. Hoffman},
    title =     {{SMTP Service Extension for Secure SMTP over Transport Layer Security}},
    pagetotal = 9,
    year =      2002,
    month =     feb,
    abstract =  {This document describes an extension to the SMTP (Simple Mail Transfer Protocol) service that allows an SMTP server and client to use TLS (Transport Layer Security) to provide private, authenticated communication over the Internet. This gives SMTP agents the ability to protect some or all of their communications from eavesdroppers and attackers. {[}STANDARDS-TRACK{]}},
}

@misc{rfcHTTPSSL,
    number =    2818,
    howpublished =  {RFC 2818},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC2818},
    url =       {https://www.rfc-editor.org/info/rfc2818},
    author =    {Eric Rescorla},
    title =     {{HTTP Over TLS}},
    pagetotal = 7,
    year =      2000,
    month =     may,
    abstract =  {This memo describes how to use Transport Layer Security (TLS) to secure Hypertext Transfer Protocol (HTTP) connections over the Internet. This memo provides information for the Internet community.},
}

@misc{rfcIMAPPOPSSL,
    number =    2595,
    howpublished =  {RFC 2595},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC2595},
    url =       {https://www.rfc-editor.org/info/rfc2595},
    author =    {Chris Newman},
    title =     {{Using TLS with IMAP, POP3 and ACAP}},
    pagetotal = 15,
    year =      1999,
    month =     jun,
    abstract =  {Recognizing that such sites will desire simple password authentication in combination with TLS encryption, this specification defines the PLAIN SASL mechanism for use with protocols which lack a simple password authentication command such as ACAP and SMTP. {[}STANDARDS-TRACK{]}},
}
